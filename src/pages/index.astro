---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import { handleProjectClick } from '../scripts/projectToggle.ts';
---

<Layout title="Nathan Zweifel">
	<div class="container">
        <header class="header">
            <div class="header-left">
				<div class="logo" id="logo">
					<img src="images/logoN.svg" alt="Logo" />
				</div>
            </div>
            <div class="header-right">
                <!-- Contenu de la section longue (droite) -->
                <h1>Nathan Zweifel</h1>
            </div>
        </header>
        <div class="content">
            <div class="left-column">
				<div class="section resume" id="resume-section">
					<h2>Resume</h2>
					<p>Nathan Zweifel is a Swiss interaction designer with a background in media engineering who is fascinated by tangible interfaces, game design, and the innovative use of AI for storytelling, focusing on playful experiences.</p>
				</div>
				<div class="section contact">
					<h2>Contact</h2>
					<ul>
						<li>Email: <a href="mailto:hello@nathanzweifel.ch">hello@nathanzweifel.ch</a></li>
						<li>LinkedIn: <a href="https://www.linkedin.com/in/nathan-zweifel-639aa9192/">linkedin.com/in/nathan-zweifel-639aa9192</a></li>
						<li>GitHub: <a href="https://github.com/zweifelna">github.com/zweifelna</a></li>
					</ul>
				</div>
			</div>
            <div class="right-column section projects">
				<div id ="project-list">
					<h2>Projects</h2>
					<ul>
						<li><a href="#" class="project-link" data-id="project1">Trust the repair (2024)</a></li>
						<li><a href="#" class="project-link" data-id="project2">Jardin des Aiguilles (2024)</a></li>
						<li><a href="#" class="project-link" data-id="project3">Psychopomp (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project4">Satanic Scissor (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project5">Scuttle! (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project6">Inner Beat (2022)</a></li>
						<li><a href="#" class="project-link" data-id="project7">Kori (2022)</a></li>
					</ul>
				</div>
				<!-- Zone pour la vidéo ou l'image principale -->
				<div id="project-media">
					<!-- La vidéo ou l'image principale s'afficheront ici -->
				</div>
			
				<!-- Zone pour les trois images miniatures en dessous -->
				<div id="project-thumbnails">
					<img id="thumbnail1" class="thumbnail hidden" alt="Thumbnail 1">
					<img id="thumbnail2" class="thumbnail hidden" alt="Thumbnail 2">
					<img id="thumbnail3" class="thumbnail hidden" alt="Thumbnail 3">
				</div>				
            </div>
        </div>
    </div>

	<script>
		let initialResumeContent = '';

		const projectMedia = {
			project1: {
				video: `<iframe width="560" height="315" src="https://www.youtube.com/embed/HobsON9SynQ?si=wwHUgEfNtW0WlRKK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>`,
				thumbnails: [
					'images/thumb1.jpg',
					'images/thumb1.jpg',
					'images/thumb1.jpg'
				]
			},
			project2: {
				video: `<img src="project2.jpg" alt="Project 2 Image">`, // Utilise une image au lieu d'une vidéo
				thumbnails: [
					'<img src="thumb2-1.jpg" alt="Thumbnail 1" class="thumbnail">',
					'<img src="thumb2-2.jpg" alt="Thumbnail 2" class="thumbnail">',
					'<img src="thumb2-3.jpg" alt="Thumbnail 3" class="thumbnail">',
				]
			},
			project3: {
				video: `<video controls width="100%">
						<source src="video3.mp4" type="video/mp4">
						Your browser does not support the video tag.
					</video>`,
				thumbnails: [
					'<img src="thumb3-1.jpg" alt="Thumbnail 1" class="thumbnail">',
					'<img src="thumb3-2.jpg" alt="Thumbnail 2" class="thumbnail">',
					'<img src="thumb3-3.jpg" alt="Thumbnail 3" class="thumbnail">'
				]
			},
			project4: {
				video: `<video controls width="100%">
						<source src="video3.mp4" type="video/mp4">
						Your browser does not support the video tag.
					</video>`,
				thumbnails: [
					'<img src="thumb3-1.jpg" alt="Thumbnail 1" class="thumbnail">',
					'<img src="thumb3-2.jpg" alt="Thumbnail 2" class="thumbnail">',
					'<img src="thumb3-3.jpg" alt="Thumbnail 3" class="thumbnail">'
				]
			}
		};

		// Sélectionne toutes les miniatures
		const thumbnails = document.querySelectorAll<HTMLImageElement>('.thumbnail');

		// Ajoute un événement de clic sur chaque miniature
		thumbnails.forEach(thumbnail => {
			thumbnail.addEventListener('click', (event) => {
				// Empêche que le clic sur l'image soit capturé par l'écouteur du document
				event.stopPropagation();

				// Vérifier si l'image cliquée est déjà active
				if (thumbnail.classList.contains('active')) {
					// Si l'image est déjà active, on la réinitialise
					thumbnail.style.transform = 'scale(1)';
					thumbnail.classList.remove('active'); // Retirer le z-index élevé
				} else {
					// Réinitialise toutes les autres images (taille normale et z-index)
					thumbnails.forEach(img => {
						img.style.transform = 'scale(1)';
						img.classList.remove('active'); // Réinitialiser les autres images
					});

					// Agrandi seulement l'image cliquée et mettre son z-index en avant
					thumbnail.style.transform = 'scale(2)';
					thumbnail.classList.add('active'); // Appliquer un z-index élevé
				}
			});
		});

		// Ajoute un écouteur d'événement sur le document pour détecter les clics à l'extérieur
		document.addEventListener('click', () => {
			// Réinitialise toutes les images si on clique à l'extérieur des miniatures
			thumbnails.forEach(img => {
				img.style.transform = 'scale(1)';
				img.classList.remove('active'); // Réinitialiser le z-index
			});
		});

		// Ajoute un écouteur d'événement pour la touche "Escape"
		document.addEventListener('keydown', (event) => {
			if (event.key === 'Escape') {
				// Réinitialise toutes les images quand "Esc" est pressé
				thumbnails.forEach(img => {
					img.style.transform = 'scale(1)';
					img.classList.remove('active'); // Réinitialiser le z-index
				});
			}
		});


		type ProjectId = 'project1' | 'project2' | 'project3' | 'project4';
		
		const projectDescriptions: Record<ProjectId, string> = {
			project1: "<i>Trust the Repair</i> is a narrative mobile game where you troubleshoot a popular tech product for a company. Initially, your tasks are simple: fix the devices and send them back. However, you soon encounter modified objects and recurring issues, making you question the company's promise of durability.<br><br> The situation worsens when the company is bought by investors who enforce strict policies on non-compliant devices and demand forced updates and data tracers. Simultaneously, activists reach out, urging you to resist the new management. You must navigate the balance between maintaining your job and helping the activists. Will you remain a part of the company\'s machinery or will you fight for the right to repair and technological sovereignty?",
			project2: "Like blooming flowers following the sunlight over and over du- ring their ephemeral existence, in the “jardin des aiguilles” watch heads will delicately swaying to follow the perpetual drawings of the magnetic arm above. This installation captivate the precision of an Axidraw machine and nature’s spontaneous choreography, showing how time can be an individual perception, even when dictated by bigger entities.",
			project3: "Psychopomp’s Pledge is a short VR experience where the player takes on the role of the Psychopomp. As such, their sacred duty is to guide departed souls to the afterlife and to amass oboles from their otherworldly passengers. Today, their charge is a child, waiting in anticipation of their transcendental passage across the spectral river. This journey, from one shore to the other, demands careful handling as they glide their spectral boat across the glimmering currents of the ghostly river, driven by the sweep of their oar. This experience was developed with Unity as part of my Master’s studies in Media Design at HEAD – Geneva and was built around the following constraints: creating a dreamlike experience, utilizing hand tracking offered by Quest 2 headsets, using photogrammetry for asset creation, and producing sounds using the mouth. This project was carried out in collaboration with <a href=\"loukannajjar.ch\"> Louka Najjar.</a>",
			project4: "Satanic Scissors is a rhythm game that pits players against a mischievous feline fiend in a game of rock-paper-scissors. Players must rely on their quick reflexes and mastery of rock-paper-scissors to score points in rhythm and defeat the demon. This project was developed using P5.js, Teachable Machine, and a camera to recognize hand movements as part of a workshop in the Master of Media Design program at HEAD – Geneva. My work focused on game design and technical aspects, in collaboration with FlexWombat. The graphic assets were created by PouetPouett.",
		};

		function handleProjectClick(projectId: ProjectId) {
			const contactSection = document.querySelector<HTMLElement>('.section.contact');
			const leftColumn = document.querySelector<HTMLElement>('.left-column');
			const rightColumn = document.querySelector<HTMLElement>('.right-column');
			const sectionProjects = document.querySelector<HTMLElement>('.section.projects');
			const resumeSection = document.getElementById('resume-section');
			const projectMediaContainer = document.getElementById('project-media');
    		const projectThumbnailsContainer = document.getElementById('project-thumbnails');
			const projectList = document.getElementById('project-list');

			if (projectList) {
				projectList.classList.add('hidden');
				projectList.classList.remove('visible');
			}

			if (contactSection) {
				contactSection.classList.add('hidden');
			}

			if (leftColumn) {
				leftColumn.style.flexBasis = '45%';
			}

			if (rightColumn) {
				rightColumn.style.flexBasis = '56%';
			}
			if (sectionProjects) {
				sectionProjects.style.color = '#000000';
				sectionProjects.style.flexBasis = '56%';
			}
			if (resumeSection && projectId in projectDescriptions) {
				resumeSection.innerHTML = `<h2>${document.querySelector(`[data-id="${projectId}"]`)?.textContent}</h2><p>${projectDescriptions[projectId]}</p>`;
			}
			// Met à jour le contenu vidéo ou image principale
			if (projectMediaContainer && projectId in projectMedia) {
				setTimeout(() => {
					projectMediaContainer.innerHTML = projectMedia[projectId].video;
				}, 400); // Ajuster la durée (500 ms) pour correspondre à la durée de la transition CSS
			}
			// Met à jour les miniatures
			if (projectThumbnailsContainer && projectId in projectMedia) {
				const thumbnails = projectMedia[projectId].thumbnails;

				// Modifier dynamiquement le 'src' des images déjà présentes dans le DOM
				const thumbnail1 = document.getElementById('thumbnail1') as HTMLImageElement;
				const thumbnail2 = document.getElementById('thumbnail2') as HTMLImageElement;
				const thumbnail3 = document.getElementById('thumbnail3') as HTMLImageElement;

				setTimeout(() => {
					if (thumbnail1) {
						thumbnail1.src = thumbnails[0]; // Ajoute la première image
						thumbnail1.classList.remove('hidden');
					}

					if (thumbnail2) {
						thumbnail2.src = thumbnails[1]; // Ajoute la deuxième image
						thumbnail2.classList.remove('hidden');
					}

					if (thumbnail3) {
						thumbnail3.src = thumbnails[2]; // Ajoute la troisième image
						thumbnail3.classList.remove('hidden');
					}
				}, 400); // Ajuster la durée (500 ms) pour correspondre à la durée de la transition CSS
				
				
			}


		}

		document.addEventListener('DOMContentLoaded', function() {
			const resumeSection = document.getElementById('resume-section');
    
			if (resumeSection) {
				initialResumeContent = resumeSection.innerHTML; // Sauvegarde du contenu initial
			}
			const projectLinks = document.querySelectorAll('.project-link');

			projectLinks.forEach(link => {
				link.addEventListener('click', function(event) {
					event.preventDefault();
					const projectId = (event.currentTarget as HTMLElement).getAttribute('data-id');

					// Validation du type de projectId
					if (projectId && projectId in projectDescriptions) {
						handleProjectClick(projectId as ProjectId);
					} else {
						console.error("Invalid project ID:", projectId);
					}

				});
			});
		});

		function resetLayout() {
			console.log("resetLayout() called - Logo clicked");
			const contactSection = document.querySelector<HTMLElement>('.section.contact');
			const leftColumn = document.querySelector<HTMLElement>('.left-column');
			const rightColumn = document.querySelector<HTMLElement>('.right-column');
			const resumeSection = document.getElementById('resume-section');
			const projectList = document.getElementById('project-list');
			const projectMediaContainer = document.getElementById('project-media');
			const projectThumbnailsContainer = document.getElementById('project-thumbnails');
			const thumbnail1 = document.getElementById('thumbnail1');
			const thumbnail2 = document.getElementById('thumbnail2');
			const thumbnail3 = document.getElementById('thumbnail3');

			// Ajouter la classe hidden aux miniatures
			if (thumbnail1) {
				thumbnail1.classList.add('hidden');
			}

			if (thumbnail2) {
				thumbnail2.classList.add('hidden');
			}

			if (thumbnail3) {
				thumbnail3.classList.add('hidden');
			}
			

			if (contactSection) {
				contactSection.classList.remove('hidden');
				contactSection.style.flexBasis = '34%'; // Réinitialise la largeur de la section contact
			}

			if (leftColumn) {
				leftColumn.style.flexBasis = '66%'; // Remet la largeur d'origine de la colonne gauche
				leftColumn.classList.remove('hidden'); // S'assurer que la colonne gauche est visible
			}

			if (rightColumn) {
				rightColumn.style.flexBasis = '33%'; // Remet la largeur d'origine de la colonne droite
			}

			if (resumeSection) {
				resumeSection.innerHTML = initialResumeContent; // Remet le contenu initial
			}

			if (projectList) {
				projectList.classList.remove('hidden');
				projectList.classList.add('visible');
			}

			// Vide la zone de la vidéo ou des images
				if (projectMediaContainer) {
					projectMediaContainer.innerHTML = '';
				}

		}

		document.addEventListener('DOMContentLoaded', function() {
			const projectLinks = document.querySelectorAll('.project-link');
			const logo = document.getElementById('logo');

			if (logo) {
				console.log("Logo found, attaching click event."); // Ajoutez ce log pour vérifier si le logo est trouvé
				logo.addEventListener('click', function() {
					console.log("Logo clicked! Calling resetLayout()");
					resetLayout(); // Réinitialiser la mise en page lorsque le logo est cliqué
				});
			} else {
				console.log("Logo not found! Check the ID."); // Si le logo n'est pas trouvé, log dans la console
			}

			projectLinks.forEach(link => {
				link.addEventListener('click', function(event) {
					event.preventDefault();
					const projectId = (event.currentTarget as HTMLElement).getAttribute('data-id');

					// Validation du type de projectId
					if (projectId && projectId in projectDescriptions) {
						handleProjectClick(projectId as ProjectId);
					} else {
						console.error("Invalid project ID:", projectId);
					}

				});
			});

			if (logo) {
				logo.addEventListener('click', function() {
					resetLayout(); // Réinitialiser la mise en page lorsque le logo est cliqué
				});
			}
		});
	</script>
</Layout>

<style>

	* {
		margin: 0;
		padding: 0;
	}

	h1,h2 {
		font-family: 'NyghtSerif', sans-serif;
		font-size: 2.5em; /* Optionnel : ajuster la taille de la police */
    	color: #0D1F9B; /* Optionnel : ajuster la couleur du texte */
	}

	.section h2 {
		font-size: 2em;
		padding-top: 4vh;
		padding-bottom: 2vh;
	}

	p, a {
		font-family: 'GeistMono', sans-serif;
		font-size: 1em; /* Optionnel : ajuster la taille de la police */
    	color: #0D1F9B; !important
	}

	body {
		background-color: #FDF4ED; /* Fond crème */
		margin: 0;
		padding: 0;
		color: #0D1F9B;
	}

	.container {
		max-width: 1200px;
		margin: 0 auto;
		padding: 5%;
	}

	.header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		border: 2px solid #0D1F9B; /* Bordure bleue */
		position: relative; /* Pour permettre le centrage absolu */
		height: 150px; /* Ajuste la hauteur du header selon tes besoins */
	}

	.header-left {
		flex-basis: 15%; /* Ajuste la largeur de la section gauche */
		
		display: flex;
		align-items: center;
		justify-content: center;
		border-right: 2px solid #0D1F9B; /* Ligne de séparation entre gauche et droite */
		height: 150px;
	}

	.header-left .logo {
		max-width: 100%; /* Ajuste selon la taille de ton logo */
	}

	.header-right {
		flex-basis: 85%; /* Ajuste la largeur de la section droite */
		text-align: center;
		color: #ffffff;
		position: absolute; /* Positionnement absolu pour centrer */
		left: 50%; /* Positionne horizontalement au centre */
		top: 50%; /* Positionne verticalement au centre */
		transform: translate(-50%, -50%); /* Centre exactement */
	}

	.header-right h1 {
		margin: 0;
		font-size: 2.5em;
	}

	.content {
		display: flex;
		justify-content: space-between;
		transition: all 0.5s ease;
	}

	.content.adjust-width {
		width: auto; /* Reviens à la largeur automatique après réinitialisation */
	}

	.left-column {
		display: flex;
		flex-direction: column;
		flex-basis: 66%; /* Largeur de la colonne de gauche (Resume et Contact) */
		transition: flex-basis 0.5s ease; /* Transition for resizing */
	}

	.right-column {
		flex-basis: 33%; /* Initial width of the right column */
		transition: flex-basis 0.5s ease;
	}

	.expand-right {
		flex-basis: 85%; /* Increase the size of the left column */
	}

	.section {
		padding: 4.125%;
		padding-top: 0;
		padding-bottom: 0;
		border: 2px solid #0D1F9B; /* Bordure bleue */
		border-top: none;
	}

	.section.hidden {
		opacity: 0;
		transition: opacity 0.5s ease-in-out; /* Fade out the sections */
	}

	.section.resume{
		padding: 8.25%;
		padding-top: 0;
		padding-bottom: 0;
		border-bottom: 2px solid #0D1F9B;
		border-left: 2px solid #0D1F9B;
		border-right: none; /* Supprime la bordure droite */
		flex-basis: 66%; /* Pour garder les sections côte à côte avec un espace */
	}

	.section.resume a{
		text-decoration: none;
		color: red;
	}

	.section.contact {
		padding: 8.25%;
		padding-top: 0;
		padding-bottom: 0;
		border-top: none; /* Supprime la bordure en haut */
		border-left: 2px solid #0D1F9B; /* Ajoute une bordure gauche pour correspondre à Resume */
		flex-basis: 66%; /* Pour garder les sections côte à côte avec un espace */
		border-right: none; /* Supprime la bordure droite */
		font-family: 'GeistMono', sans-serif;
		transition: flex-basis 0.5s ease;
	}

	.hidden {
		transition: flex-basis 0 ease-in-out !important;
		overflow: hidden; /* Ensures content does not overflow during transition */
		display: none;
	}
	
	.section.contact a{
		padding-bottom: 1.5em;
	}

	.section.projects {
		transition: flex-basis 0.5s ease-in-out; /* Transition for resizing */
	}

	.resume p {
		font-size: 1em;
		line-height: 1.5;
		padding-bottom: 1.5em;
	}

	.projects ul {
		list-style-type: none;
		padding: 0;
	}

	.projects li {
		margin-bottom: 10px;
	}


	.projects a:hover {
		text-decoration: underline;
	}

	.contact {
    flex-basis: 100%; /* Prend toute la largeur disponible sous "Resume" */
	}

	.contact ul {
		list-style-type: none;
		padding: 0;
		margin-bottom: 4vh;
		line-height: 1.5;
	}

	.contact a {
		color: #0D1F9B;
	}



	.contact a:hover {
		text-decoration: underline;
	}

	.logo img {
    transition: transform 0.4s ease-in-out; /* Ajoute une transition douce */
	}

	.logo img:hover {
		transform: rotate(180deg); /* Fait pivoter l'image de 360 degrés */
	}

	#project-link {
		display: inline-block;
    	transition: transform 0.3s ease, color 0.3s ease;
	}

	#project-link.clicked {
		transform: scale(1.2);
	}

	.left-column, .right-column {
		transition: flex-basis 0.5s ease;
	}
	
	#project-media {
    margin-top: 20px;
    text-align: center;
	}

	#project-thumbnails {
		display: flex;
		justify-content: space-between; /* Espace entre les images */
		gap: 15px; /* Espacement entre les miniatures */
	}

	.thumbnail {
		width: 200px;
		height: 150px;
		object-fit: cover; /* Remplit l'espace sans déformer l'image */
		cursor: pointer; /* Indique que l'image est cliquable */
		transition: transform 0.3s ease, z-index 0s ease 0.3s; /* Transition douce pour l'effet d'agrandissement */
		z-index: 0; /* Par défaut, les images ont un z-index bas */
		position: relative; /* Pour que le z-index fonctionne */
	}

	.thumbnail.active {
		z-index: 10; /* L'image cliquée sera au-dessus des autres */
		transition: transform 0.3s ease, z-index 0s ease 0s; /* Le z-index change immédiatement, mais l'effet d'agrandissement est progressif */
	}

	#project-list {
    transition: opacity 0.3s ease, visibility 0.3s ease;
	}

	#project-list.hidden {
		opacity: 0;
		visibility: hidden;
	}

	#project-list.visible {
		opacity: 1;
		visibility: visible;
	}



</style>
