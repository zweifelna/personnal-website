---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import { handleProjectClick } from '../scripts/projectToggle.ts';
---

<Layout title="Nathan Zweifel">
	<div id="overlay"></div>
	<div class="container">
        <header class="header">
            <div class="header-left">
				<div class="logo" id="logo">
					<img src="images/logoN.svg" alt="Logo" />
				</div>
            </div>
            <div class="header-right">
                <!-- Contenu de la section longue (droite) -->
                <h1 id="nathan-zw">Nathan Zweifel</h1>
            </div>
        </header>
        <div class="content">
            <div class="left-column">
				<div class="section resume" id="resume-section">
					<h2>Resume</h2>
					<p>I am a Swiss interaction designer with a background in engineering who is fascinated by tangible interfaces and game design, focusing on playful experiences.</p>
				</div>
				<div class="section contact">
					<h2>Contact</h2>
					<ul>
						<li>email: <a href="mailto:hello@nathanzweifel.ch" target="_blank">hello@nathanzweifel.ch</a></li>
						<li>gitHub: <a href="https://github.com/zweifelna" target="_blank">github.com/zweifelna</a></li>
						<li>itch: <a href="https://flexwombat.itch.io/" target="_blank">flexwombat.itch.io</a></li>
						<li>linkedIn: <a href="https://www.linkedin.com/in/nathanzweifel/" target="_blank">linkedin.com/in/nathanzweifel</a></li>
					</ul>
				</div>
			</div>
            <div class="right-column section projects">
				<div id ="project-list">
					<h2>Projects</h2>
					<ul>
						<li><a href="#" class="project-link" data-id="project1">Trust the repair (2024)</a></li>
						<li><a href="#" class="project-link" data-id="project2">Jardin des Aiguilles (2024)</a></li>
						<li><a href="images/NATHAN_ZWEIFEL_IncorporerLeVirtuel.pdf" download>Master's thesis (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project3">Psychopomp’s Pledge (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project4">Satanic Scissor (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project5">Scuttle! (2023)</a></li>
						<li><a href="#" class="project-link" data-id="project6">Inner Beat (2022)</a></li>
						<li><a href="#" class="project-link" data-id="project7">Tothem (2022)</a></li>
						<li><a href="#" class="project-link" data-id="project8">Kori (2022)</a></li>
					</ul>
				</div>
				<!-- Zone pour la vidéo ou l'image principale -->
				<div id="project-media" class="hidden">
					<iframe id="project-video" width="560" height="315" title="YouTube video player" frameborder="0" src="" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
					<img id="project-image" src="" alt="Project image" style="display:none; max-width: 100%; height: auto;" />
				</div>
			
				<!-- Zone pour les trois images miniatures en dessous -->
				<div id="project-thumbnails">
					<img id="thumbnail1" class="thumbnail hidden" alt="Thumbnail 1">
					<img id="thumbnail2" class="thumbnail hidden" alt="Thumbnail 2">
					<img id="thumbnail3" class="thumbnail hidden" alt="Thumbnail 3">
				</div>				
            </div>
        </div>
    </div>

	<script data-goatcounter="https://zweinat.goatcounter.com/count" async src="//gc.zgo.at/count.js"></script>
	<script>
		let initialResumeContent = '';

		const projectMedia = {
			project1: {
				videoSrc: `https://www.youtube.com/embed/HobsON9SynQ?si=wwHUgEfNtW0WlRKK"`,
				thumbnails: [
					'images/thumb1.webp',
					'images/thumb2.webp',
					'images/thumb3.webp'
				]
			},
			project2: {
				videoSrc: `https://www.youtube.com/embed/_0evb--k5EA?si=5kafDNd2TAzaRgYV`, 
				thumbnails: [
					'images/thumb2-1.webp',
					'images/thumb2-2.webp',
					'images/blank.png'
				]
			},
			project3: {
				videoSrc: `https://www.youtube.com/embed/F71fn3GbklE?si=YkSgcFd65K0bpPMq`,
				thumbnails: [
					'images/thumb3-1.webp',
					'images/thumb3-2.webp',
					'images/thumb3-3.webp'
				]
			},
			project4: {
				videoSrc: `https://www.youtube.com/embed/mWov9qY61Gw?si=NKXpUOt6YLsK1Qg3`,
				thumbnails: [
					'images/thumb4-1.webp',
					'images/thumb4-2.webp',
					'images/thumb4-3.webp'
				]
			},
			project5: {
				imageSrc: `images/thumb5.webp`, // Utilise une image au lieu d'une vidéo
				thumbnails: [
					'images/thumb5-1.webp',
					'images/blank.png',
					'images/thumb5-2.webp'
				]
			},
			project6: {
				imageSrc: `images/thumb6.jpg`, // Utilise une image au lieu d'une vidéo
				thumbnails: [
					'images/thumb6-1.webp',
					'images/thumb6-2.webp',
					'images/thumb6-3.webp'
					
				]
			},
			project7: {
				videoSrc: `https://www.youtube.com/embed/g6NbTU81lG8?si=ufPUUdc2mmS9Sx3v`, // Utilise une image au lieu d'une vidéo
				thumbnails: [
					'images/thumb7-1.webp',
					'images/thumb7-2.webp',
					'images/thumb7-3.webp'
				]
			},
			project8: {
				imageSrc: `images/thumb8.jpg`, // Utilise une image au lieu d'une vidéo
				thumbnails: [
					'images/thumb8-1.webp',
					'images/thumb8-2.webp',
					'images/thumb8-3.webp'
				]
			}
		};

		// Sélectionne toutes les miniatures
		const overlay = document.getElementById('overlay'); // Sélectionner l'overlay
		const thumbnails = document.querySelectorAll<HTMLImageElement>('.thumbnail');

		thumbnails.forEach(thumbnail => {
			thumbnail.addEventListener('click', function(event) {
				event.stopPropagation();

				if (thumbnail.classList.contains('active')) {
					// Si l'image est déjà active, on la réinitialise
					thumbnail.classList.remove('active');
					document.body.style.overflow = ''; // Réactive le scroll
					if (overlay) {
						overlay.style.display = 'none'; // Masquer l'overlay
					}
				} else {
					// Réinitialise toutes les autres images
					thumbnails.forEach(img => {
						img.classList.remove('active');
					});

					// Agrandit seulement l'image cliquée
					thumbnail.classList.add('active');
					document.body.style.overflow = 'hidden'; // Désactive le scroll
					if (overlay) {
						overlay.style.display = 'block'; // Affiche l'overlay
					}
				}
			});
		});

		// Fonction pour vérifier s'il y a une image active (ou autre élément actif)
		function hasActiveThumbnail(): boolean {
			return document.querySelector('.thumbnail.active') !== null;
		}

		// Ajouter un écouteur d'événement pour la touche "Escape" uniquement pour revenir à l'état de base
		document.addEventListener('keydown', (event) => {
			if (event.key === 'Escape' && !hasActiveThumbnail()) {
				resetLayout(); // Appelle la fonction qui réinitialise la mise en page
			}
		});

		// Sélectionner l'élément "Nathan Zweifel"
		const nathanTitle = document.getElementById('nathan-zw');

		// Vérifier si l'élément existe et ajouter un gestionnaire de clic
		if (nathanTitle) {
			nathanTitle.addEventListener('click', () => {
				resetLayout(); // Appeler la fonction qui réinitialise la mise en page
			});
		}


		type ProjectId = 'project1' | 'project2' | 'project3' | 'project4' | 'project5' | 'project6' | 'project7' | 'project8' ;
		
		const projectDescriptions: Record<ProjectId, string> = {
			project1: "<i>Trust the Repair</i> is a narrative mobile game where you troubleshoot a popular tech product for a company. Initially, your tasks are simple: fix the devices and send them back. However, you soon encounter modified objects and recurring issues, making you question the company's promise of durability.<br><br> The situation worsens when the company is bought by investors who enforce strict policies on non-compliant devices and demand forced updates and data tracers. Simultaneously, activists reach out, urging you to resist the new management. You must navigate the balance between maintaining your job and helping the activists. Will you remain a part of the company\'s machinery or will you fight for the right to repair and technological sovereignty?",
			project2: "In Jardin des Aiguilles, watch hands gently sway, mirroring the steady motion of a magnetic arm above, much like flowers turning toward the sun. This installation combines the precision of the AxiDraw machine with nature's organic movement, showing how time, though controlled by larger forces, is experienced differently by each of us. It highlights the contrast between mechanical precision and natural rhythm, revealing how time can feel both universal and deeply personal.<br><br> I realized this projetct as part of a workshop with <a href=\"https://www.linkedin.com/in/hanieh-rashid\" target=\"_blank\">Hanieh Rashid</a> and <a href=\"https://www.linkedin.com/in/michelleponti\" target=\"_blank\">Michelle Ponti</a> and led by <a style=\"color: #0D1F9B\" href=\"https://www.arnaudpfeffer.com/\" target=\"_blank\">Arnaud Pfeffer</a> and will be showcased at the HEAD exhibition for the <a style=\"color: #0D1F9B\" href=\"https://www.gphg.org/\" target=\"_blank\">Grand Prix d'Horlogerie de Genève</a> 2024.",
			project3: "Psychopomp’s Pledge is a short VR experience where the player takes on the role of the Psychopomp. As such, their sacred duty is to guide departed souls to the afterlife and to amass oboles from their otherworldly passengers. Today, their charge is a child, waiting in anticipation of their transcendental passage across the spectral river. This journey, from one shore to the other, demands careful handling as they glide their spectral boat across the glimmering currents of the ghostly river, driven by the sweep of their oar. <br><br>This experience was developed with Unity as part of my Master’s studies in Media Design at HEAD – Geneva and was built around the following constraints: creating a dreamlike experience, utilizing hand tracking offered by Quest 2 headsets, using photogrammetry for asset creation, and producing sounds using the mouth. This project was carried out in collaboration with <a style=\"color: #0D1F9B\" href=\"https://loukanajjar.ch\" target=\"_blank\">Louka Najjar</a>.",
			project4: "Satanic Scissors is a rhythm game that pits players against a mischievous feline fiend in a game of rock-paper-scissors. Players must rely on their quick reflexes and mastery of rock-paper-scissors to score points in rhythm and defeat the demon. <br><br>This project was developed using P5.js, Teachable Machine, and a camera to recognize hand movements as part of a workshop in the Master of Media Design program at HEAD – Geneva. My work focused on game design and technical aspects, in collaboration with <a style=\"color: #0D1F9B\" href=\"https://loukanajjar.ch\" target=\"_blank\">Louka Najjar</a>. The graphic assets were created by <a style=\"color: #0D1F9B\" href=\"https://www.instagram.com/eupholie_/\" target=\"_blank\">Eupholie</a>.",
			project5: "<a href=\"https://fly06.itch.io/scuttle\" target=\"_blank\">Scuttle!</a> is an arcade game where the player controls a spider running for its life. They must navigate through a house full of dangers and go as far as possible. To survive, they need to hide in the shadows of objects lying around—but not for too long. The game features a leaderboard where players can compete with others. <br><br>The game was created for the <a href=\"https://itch.io/jam/scorejam25\" target=\"_blank\">ScoreSpace Jam #25</a> with the theme Stealth and won 1st place. I worked on the programming in collaboration with <a style=\"color: #0D1F9B\" href=\"https://loukanajjar.ch\" target=\"_blank\">Louka Najjar</a> in Unity, and <a style=\"color: #0D1F9B\" href=\"https://www.instagram.com/eupholie_/\" target=\"_blank\">Eupholie</a> created the art.",
			project6: "Whether intriguing, disturbing or even painful, we encounter sound pollution in our daily routines. To deal with it, there is the <i>Inner Beat</i>, a wrist-wearable object containing a small creature that represents your hearing sensitivity and helps you to see the power of these noises. <br><br>If the level of sound pollution is too high, the blob starts to deteriorate and so does the protection. You can reconstitute it by resynchronizing its rhythm or spontaneously cooperating with others. When walking outside, be careful not to lose your Inner Beat in front of sound aggression to avoid your blob suffering.",
			project7: "Tothem is a game based on a physical totem and its representation in the virtual world. The totem attracts disciples, and as their civilization grows and thrives, these citizens have demands. To meet their needs, the player must interact with the physical totem. <br><br>Inside the physical totem, an Arduino and several sensors are hidden, allowing the detection of various inputs, such as shocks or ambient temperature. The totem is connected to the game via Bluetooth. The game was developed using Processing as part of a workshop in the Master of Media Design program at HEAD – Geneva.<br><br>My role in the team primarily involved designing the interaction and working on the programming. Other team members included <a style=\"color: #0D1F9B\" href=\"https://www.instagram.com/slthyz/\" target=\"_blank\">Elie Höfer</a>, <a style=\"color: #0D1F9B\" href=\"https://loukanajjar.ch\" target=\"_blank\">Louka Najjar</a> Najjar, and <a style=\"color: #0D1F9B\" href=\"https://www.instagram.com/eupholie_/\" target=\"_blank\">Eupholie</a>.",
			project8: "Kori is an innovative tangible interface in the form of a small robot designed for children aged 7 to 10. Through a collaborative approach, it allows children to create interactive stories using a question-and-answer format. Powered by artificial intelligence (GPT-3), Kori offers a wide variety of storylines while guiding the children in shaping the narrative.<br><br>Developed using a Raspberry Pi and modeled and 3D-printed, Kori allows children to actively participate in the creation of stories, while providing support to structure their creativity. At the end of each session, the stories can be listened to in class and shared with parents, enhancing both classroom engagement and family involvement.<br><br>This project involved the implementation of all stages of a structured process, including: user research and analysis, collaborative ideation, the progressive selection and refinement of the concept, the development of interactive prototypes, user testing, and even the creation and testing of a website to communicate the launch of such a product."
		};

		function handleProjectClick(projectId: ProjectId) {
			const contactSection = document.querySelector<HTMLElement>('.section.contact');
			const leftColumn = document.querySelector<HTMLElement>('.left-column');
			const rightColumn = document.querySelector<HTMLElement>('.right-column');
			const sectionProjects = document.querySelector<HTMLElement>('.section.projects');
			const resumeSection = document.getElementById('resume-section');
			const projectMediaContainer = document.getElementById('project-media');
    		const projectThumbnailsContainer = document.getElementById('project-thumbnails');
			const projectList = document.getElementById('project-list');
			const projectSection = document.querySelector<HTMLElement>('.section.projects');
			const contentContainer = document.querySelector<HTMLElement>('.content');

			if (projectList) {
				projectList.classList.add('hidden');
				projectList.classList.remove('visible');
			}

			if (contactSection) {
				contactSection.classList.add('hidden');
			}

			if (leftColumn) {
				leftColumn.style.flexBasis = '45%';
			}

			if (rightColumn) {
				rightColumn.style.flexBasis = '56%';
			}
			if (sectionProjects) {
				sectionProjects.style.color = '#000000';
				sectionProjects.style.flexBasis = '56%';
			}
			if (resumeSection && projectId in projectDescriptions) {
				resumeSection.innerHTML = `<h2>${document.querySelector(`[data-id="${projectId}"]`)?.textContent}</h2><p>${projectDescriptions[projectId]}</p>`;
			}
			// Met à jour le contenu vidéo ou image principale
			if (projectMediaContainer && projectId in projectMedia) {
				const project = projectMedia[projectId];

				// Vérifie si c'est une vidéo
				if ('videoSrc' in project) {
					// Afficher le container du media (vidéo ou image)
					projectMediaContainer.classList.remove('hidden');

					// Affiche la vidéo
					const projectVideo = document.getElementById('project-video') as HTMLIFrameElement;
					const projectImage = document.getElementById('project-image') as HTMLImageElement;

					if (projectVideo) {
						projectVideo.style.display = 'block';
						projectVideo.setAttribute('src', project.videoSrc); // Accède à videoSrc ici
					}
					if (projectImage) {
						projectImage.style.display = 'none'; // Masque l'image
					}

				} else if ('imageSrc' in project) {
					// Afficher le container du media (vidéo ou image)
					projectMediaContainer.classList.remove('hidden');
					// Sinon, affiche l'image
					const projectImage = document.getElementById('project-image') as HTMLImageElement;
					const projectVideo = document.getElementById('project-video') as HTMLIFrameElement;

					if (projectImage) {
						projectImage.style.display = 'block';
						projectImage.setAttribute('src', project.imageSrc); // Accède à imageSrc ici
					}
					if (projectVideo) {
						projectVideo.style.display = 'none';
						projectVideo.setAttribute('src', ''); // Réinitialise le src de l'iframe
					}
				}

				// Si on est sur mobile, déplacer "Projects" en dernier
				if (window.innerWidth <= 768) {
					if (projectSection) {
						projectSection.style.order = '2'; // Place "Projects" en dernier
					}
				}
			}
			// Met à jour les miniatures
			if (projectThumbnailsContainer && projectId in projectMedia) {
				const thumbnails = projectMedia[projectId].thumbnails;

				// Modifier dynamiquement le 'src' des images déjà présentes dans le DOM
				const thumbnail1 = document.getElementById('thumbnail1') as HTMLImageElement;
				const thumbnail2 = document.getElementById('thumbnail2') as HTMLImageElement;
				const thumbnail3 = document.getElementById('thumbnail3') as HTMLImageElement;

				setTimeout(() => {
					if (thumbnail1) {
						thumbnail1.src = thumbnails[0]; // Ajoute la première image
						thumbnail1.classList.remove('hidden');
					}

					if (thumbnail2) {
						thumbnail2.src = thumbnails[1]; // Ajoute la deuxième image
						thumbnail2.classList.remove('hidden');
					}

					if (thumbnail3) {
						thumbnail3.src = thumbnails[2]; // Ajoute la troisième image
						thumbnail3.classList.remove('hidden');
					}
				}, 400); // Ajuster la durée (500 ms) pour correspondre à la durée de la transition CSS
				
				
			}


		}

		document.addEventListener('DOMContentLoaded', function() {
			const resumeSection = document.getElementById('resume-section');
    
			if (resumeSection) {
				initialResumeContent = resumeSection.innerHTML; // Sauvegarde du contenu initial
			}
			const projectLinks = document.querySelectorAll('.project-link');

			projectLinks.forEach(link => {
				link.addEventListener('click', function(event) {
					event.preventDefault();
					const projectId = (event.currentTarget as HTMLElement).getAttribute('data-id');

					// Validation du type de projectId
					if (projectId && projectId in projectDescriptions) {
						handleProjectClick(projectId as ProjectId);
					} else {
						console.error("Invalid project ID:", projectId);
					}

				});
			});
		});

		function resetLayout() {
			const contactSection = document.querySelector<HTMLElement>('.section.contact');
			const leftColumn = document.querySelector<HTMLElement>('.left-column');
			const rightColumn = document.querySelector<HTMLElement>('.right-column');
			const resumeSection = document.getElementById('resume-section');
			const projectList = document.getElementById('project-list');
			const projectMediaContainer = document.getElementById('project-media');
			const projectVideo = document.getElementById('project-video') as HTMLIFrameElement;
			const projectImage = document.getElementById('project-image') as HTMLImageElement;
			const projectThumbnailsContainer = document.getElementById('project-thumbnails');
			const thumbnail1 = document.getElementById('thumbnail1');
			const thumbnail2 = document.getElementById('thumbnail2');
			const thumbnail3 = document.getElementById('thumbnail3');
			const projectSection = document.querySelector<HTMLElement>('.section.projects');
			const contentContainer = document.querySelector<HTMLElement>('.content');


			if (projectMediaContainer) {
				projectMediaContainer.classList.add('hidden'); // Masquer le container media
			}
			// Ajouter la classe hidden aux miniatures
			if (thumbnail1) {
				thumbnail1.classList.add('hidden');
			}

			if (thumbnail2) {
				thumbnail2.classList.add('hidden');
			}

			if (thumbnail3) {
				thumbnail3.classList.add('hidden');
			}
			

			if (contactSection) {
				contactSection.classList.remove('hidden');
				contactSection.style.flexBasis = '34%'; // Réinitialise la largeur de la section contact
			}

			if (leftColumn) {
				leftColumn.style.flexBasis = '66%'; // Remet la largeur d'origine de la colonne gauche
				leftColumn.classList.remove('hidden'); // S'assurer que la colonne gauche est visible
			}

			if (rightColumn) {
				rightColumn.style.flexBasis = '33%'; // Remet la largeur d'origine de la colonne droite
			}

			if (resumeSection) {
				resumeSection.innerHTML = initialResumeContent; // Remet le contenu initial
			}

			if (projectList) {
				projectList.classList.remove('hidden');
				projectList.classList.add('visible');
			}

			// Réinitialiser la vidéo (en vidant le src et en masquant l'iframe)
			if (projectVideo) {
				projectVideo.setAttribute('src', '');
				projectVideo.style.display = 'none';
			}

			// Réinitialiser l'image (en masquant l'élément)
			if (projectImage) {
				projectImage.setAttribute('src', '');
				projectImage.style.display = 'none';
			}

			// Si on est sur mobile, remettre "Projects" en premier
			if (window.innerWidth <= 768) {
				if (projectSection) {
					projectSection.style.order = '-1'; // Place "Projects" en premier
				}
			}

		}

		document.addEventListener('DOMContentLoaded', function() {
			const projectLinks = document.querySelectorAll('.project-link');
			const logo = document.getElementById('logo');

			if (logo) {
				console.log("Logo found, attaching click event."); // Ajoutez ce log pour vérifier si le logo est trouvé
				logo.addEventListener('click', function() {
					console.log("Logo clicked! Calling resetLayout()");
					resetLayout(); // Réinitialiser la mise en page lorsque le logo est cliqué
				});
			} else {
				console.log("Logo not found! Check the ID."); // Si le logo n'est pas trouvé, log dans la console
			}

			projectLinks.forEach(link => {
				link.addEventListener('click', function(event) {
					event.preventDefault();
					const projectId = (event.currentTarget as HTMLElement).getAttribute('data-id');

					// Validation du type de projectId
					if (projectId && projectId in projectDescriptions) {
						handleProjectClick(projectId as ProjectId);
					} else {
						console.error("Invalid project ID:", projectId);
					}

				});
			});

			if (logo) {
				logo.addEventListener('click', function() {
					resetLayout(); // Réinitialiser la mise en page lorsque le logo est cliqué
				});
			}
		});
	</script>
</Layout>

<style>

	

</style>
